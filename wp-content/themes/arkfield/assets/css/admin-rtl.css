@charset "UTF-8";
/*------------------------------------*\
    $ADMIN RTL SUPPORT
\*------------------------------------*/
/*------------------------------------*\
    $DEFAULTS
\*------------------------------------*/
/**
 * inuit.css’ default variables. Redefine these in your `_vars.scss` file (found
 * in the inuit.css-web-template) to override them.
 */
/*------------------------------------*\
    $DEBUG
\*------------------------------------*/
/**
 * Debug mode will visually highlight any potential markup/accessibility quirks
 * in the browser. Set to `true` or `false`.
 */
/*------------------------------------*\
    $BORDER-BOX
\*------------------------------------*/
/**
 * Do you want all elements to adopt `box-sizing:border-box;` as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/**
 * Base stuff
 */
/**
 * Base font-family.
 */
/**
 * Default colour for objects’ borders etc.
 */
/*------------------------------------*\
    $RESPONSIVE
\*------------------------------------*/
/**
 * Responsiveness?
 */
/**
 * Responsiveness for widescreen/high resolution desktop monitors and beyond?
 * Note: `$responsive` variable above must be set to true before enabling this.
 */
/**
 * Responsive push and pull produce a LOT of code, only turn them on if you
 * definitely need them.
 */
/**
 * Note: `$push` variable above must be set to true before enabling these.
 */
/**
 * Note: `$pull` variable above must be set to true before enabling these.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $FONT-SIZES
\*------------------------------------*/
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */
/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * English quote marks?
 */
/**
 * If you want English quotes then please do not edit these; they’re only here
 * because Sass needs them.
 */
/**
 * If you need non-English quotes, please alter the following values accordingly:
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * Brand stuff
 */
/**
 * How big would you like round corners to be by default?
 */
/*------------------------------------*\
    $OBJECTS AND ABSTRACTIONS
\*------------------------------------*/
/**
 * Which objects and abstractions would you like to use?
 */
/*------------------------------------*\
    $FRAMEWORK
\*------------------------------------*/
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
/**
 * Style any number of headings in one fell swoop, e.g.:
 *
   .foo{
       @include headings(1, 3){
           color:#BADA55;
       }
    }
 *
 * With thanks to @lar_zzz, @paranoida, @rowanmanning and ultimately
 * @thierrylemoulec for refining and improving my initial mixin.
 */
/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 *
   .foo{
       @include vendor(animation, shrink 3s);
   }

   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 *
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
/**
 * Force overly long spans of text to truncate, e.g.:
 *
   `@include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 *
 */
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    BASE
\*------------------------------------*/
.rtl {
  direction: rtl;
  unicode-bidi: embed; }

/*------------------------------------*\
  $PROJECTS GALLERY
\*------------------------------------*/
.pikart-gallery-reset {
  margin-right: 10px; }

.pikart-gallery-images {
  margin-right: 250px; }

/*------------------------------------*\
    $METABOX
\*------------------------------------*/
#header_slider .meta-box-custom-field,
#poststuff div[id^="page_builder_sections"] .meta-box-custom-field,
#audio_post_format .meta-box-custom-field {
  margin-right: 10px; }
  #header_slider .meta-box-custom-field label,
  #poststuff div[id^="page_builder_sections"] .meta-box-custom-field label,
  #audio_post_format .meta-box-custom-field label {
    margin-right: 0;
    margin-left: 20px;
    text-align: left; }
  @media only screen and (max-width: 1023px) {
    #header_slider .meta-box-custom-field span,
    #poststuff div[id^="page_builder_sections"] .meta-box-custom-field span,
    #audio_post_format .meta-box-custom-field span {
      margin-right: 100px;
      margin-left: 0; } }
  @media only screen and (min-width: 1024px) {
    #header_slider .meta-box-custom-field span,
    #poststuff div[id^="page_builder_sections"] .meta-box-custom-field span,
    #audio_post_format .meta-box-custom-field span {
      margin-right: 254px; } }

/*------------------------------------*\
  $PAGE BUILDER
\*------------------------------------*/
#poststuff div[id^="page_builder_sections"] .handlediv {
  right: auto;
  left: 22px; }
@media only screen and (max-width: 1023px) {
  #poststuff div[id^="page_builder_sections"] .wp-editor-wrap {
    margin-left: 0px; } }
@media only screen and (min-width: 1024px) {
  #poststuff div[id^="page_builder_sections"] .wp-editor-wrap {
    margin-right: 250px;
    margin-left: 0; } }
#poststuff div[id^="page_builder_sections"] .wp-editor-wrap .mce-menubtn.mce-fixed-width span {
  margin-left: 0; }
@media only screen and (max-width: 1023px) {
  #poststuff div[id^="page_builder_sections"] .tmce-active + span {
    margin-left: 0; } }
@media only screen and (min-width: 1024px) {
  #poststuff div[id^="page_builder_sections"] .tmce-active + span {
    margin-left: 254px; } }
@media only screen and (max-width: 1023px) {
  #poststuff div[id^="page_builder_sections"] .wp-media-buttons {
    float: left; } }
#poststuff div[id^="page_builder_sections"] .wp-media-buttons-icon {
  margin-right: 2px !important; }

#page_builder_add_section span:after {
  float: left; }
#page_builder_add_section .icon-refresh {
  margin-0: 10px;
  margin-right: 10px; }

/*------------------------------------*\
  $THEME OPTIONS
\*------------------------------------*/
#arkfield_setting_logo_image-button {
  float: right; }

#customize-control-arkfield_setting_heading_line_height,
#customize-control-arkfield_setting_text_font_size,
#customize-control-arkfield_setting_text_line_height,
#customize-control-arkfield_setting_letter_spacing {
  float: left; }

/*------------------------------------*\
  $OBJECTS
\*------------------------------------*/
.new-tab label {
  right: 23px;
  left: 0; }
